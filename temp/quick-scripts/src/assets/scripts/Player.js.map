{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","Component","properties","jumpHeight","jumpDuration","maxModelSpeed","accel","jumpAudio","type","AudioClip","setJumpAction","jumpUp","moveBy","v2","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","callback","callFunc","playJumpSound","repeatForever","sequence","audioEngine","playEffect","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","onKeyUp","onLoad","jumpAction","node","runAction","xSpeed","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","onDestory","off","EeventType","update","dt","Math","abs","maxMoveSpeed","x"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\n// Class that allows us to add properties to nodes\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // main character's jump height\r\n        jumpHeight: 0,\r\n        // main character's jump duration\r\n        jumpDuration: 0,\r\n        // maximal movement speed\r\n        maxModelSpeed: 0,\r\n        // acceleration\r\n        accel: 0,\r\n        jumpAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n    },\r\n\r\n    setJumpAction: function() {\r\n        // jump up\r\n        var jumpUp = cc.moveBy(this.jumpDuration, cc.v2(0, this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n        // jump down\r\n        var jumpDown = cc.moveBy(this.jumpDuration, cc.v2(0, -this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n        // add a callback function to invoke other defined methods after the action is finished\r\n        var callback = cc.callFunc(this.playJumpSound, this);\r\n        // repeat\r\n        return cc.repeatForever(cc.sequence(jumpUp, jumpDown, callback));\r\n    },\r\n\r\n    playJumpSound: function() {\r\n        if(this.jumpAudio != null){\r\n            // invoke sound engine to play the sound\r\n            cc.audioEngine.playEffect(this.jumpAudio, false);\r\n        }\r\n    },\r\n\r\n    onKeyDown (event) {\r\n        // set a flag when key pressed\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = true;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = true;\r\n                break;\r\n        }\r\n    },\r\n\r\n    onKeyUp (event) {\r\n        // unset a flag when key released\r\n        switch(event.keyCode) {\r\n            case cc.macro.KEY.a:\r\n                this.accLeft = false;\r\n                break;\r\n            case cc.macro.KEY.d:\r\n                this.accRight = false;\r\n                break;\r\n        }\r\n    },\r\n\r\n\r\n    onLoad: function () {\r\n        //initialize jump action\r\n        this.jumpAction = this.setJumpAction();\r\n        this.node.runAction(this.jumpAction);\r\n\r\n        // Acceleration direction switch\r\n        this.accLeft = false;\r\n        this.accRight = false;\r\n\r\n        // The main character's current horizontal velocity\r\n        this.xSpeed = 0;\r\n\r\n        // Initialise the keyboard input listening\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n    onDestory (){\r\n        // Cancel keyboard input monitoring\r\n        cc.systemEvent.off(cc.SystemEvent.EeventType.KEY_DOWN, this.onKeyDown, this);\r\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\r\n    },\r\n\r\n    /* start () {\r\n\r\n    }, */\r\n    update: function (dt) {\r\n        // update speed of each frame according to the current acceleration direction\r\n        if (this.accLeft) {\r\n            this.xSpeed -= this.accel * dt;\r\n        } else if (this.accRight) {\r\n            this.xSpeed += this.accel * dt;\r\n        }\r\n        // restrict the movement speed of the main character to the maximum movement speed\r\n        if ( Math.abs(this.xSpeed) > this.maxMoveSpeed ) {\r\n            // if speed reach limit, use max speed with current direction\r\n            this.xSpeed = this.maxMoveSpeed * this.xSpeed / Math.abs(this.xSpeed);\r\n        }\r\n\r\n        // update the position of the main character according to the current speed\r\n        this.node.x += this.xSpeed * dt;\r\n    }\r\n});\r\n"]}